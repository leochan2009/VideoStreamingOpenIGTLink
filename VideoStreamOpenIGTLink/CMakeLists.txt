cmake_minimum_required(VERSION 2.8)
project( VideoStreamOpenIGTLink )

get_filename_component(PARENT_DIR ${CMAKE_CURRENT_BINARY_DIR} PATH)
set(CMAKE_PREFIX_PATH	"${PARENT_DIR}/OpenIGTLink-build")	
find_package(OpenIGTLink REQUIRED)
include(${OpenIGTLink_USE_FILE})
include_directories(${OpenIGTLink_INCLUDE_DIRS})
link_directories(${OpenIGTLink_LIBRARY_DIRS})
#Add OpenH264 directly to our build.
#add_subdirectory(${PARENT_DIR}/Testing/OpenH264)
include_directories("${PARENT_DIR}/OpenH264/codec")
include_directories("${PARENT_DIR}/OpenH264/codec/common/inc")
include_directories("${PARENT_DIR}/OpenH264/codec/console/common/src")
include_directories("${PARENT_DIR}/OpenH264/codec/console/common/inc")
include_directories("${PARENT_DIR}/OpenH264/codec/console/dec/inc")
include_directories("${PARENT_DIR}/OpenH264/codec/api/svc")
include_directories("${PARENT_DIR}/OpenH264/codec/encoder/core/inc")
include_directories("${PARENT_DIR}/OpenH264/codec/processing/interface")
include_directories("${PARENT_DIR}/OpenH264/test")

LINK_DIRECTORIES("${PARENT_DIR}/OpenH264")

SET(VideoStreamOpenIGTLink_SOURCES VideoStreamIGTLinkServer.cxx VideoStreamIGTLinkReceiver.cxx welsenc.cpp ${PARENT_DIR}/OpenH264/test/api/sha1.c H264Decoder.cpp ${PARENT_DIR}/OpenH264/codec/console/common/src/read_config.cpp)
SET(VideoStreamOpenIGTLink_INCLUDES VideoStreamIGTLinkServer.h VideoStreamIGTLinkReceiver.h welsenc.h ${PARENT_DIR}/OpenH264/test/sha1.h H264Decoder.h ${PARENT_DIR}/OpenH264/codec/console/common/inc/read_config.h)

add_library( VideoStreamOpenIGTLink ${VideoStreamOpenIGTLink_SOURCES} ${VideoStreamOpenIGTLink_INCLUDES})
if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
  target_link_libraries( VideoStreamOpenIGTLink OpenIGTLink ${PARENT_DIR}/OpenH264/OpenH264.lib)
else(CMAKE_SYSTEM_NAME STREQUAL "Windows")
  target_link_libraries( VideoStreamOpenIGTLink OpenIGTLink ${PARENT_DIR}/OpenH264/libopenh264.a)
endif(CMAKE_SYSTEM_NAME STREQUAL "Windows")
